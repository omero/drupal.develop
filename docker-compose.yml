version: "2.3"

services:
  mariadb:
    image: wodby/mariadb:10.2-3.1.3
    env_file: ./.env
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'true'
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysqldata:/var/lib/mysql
      # Place init .sql file(s) here
      - ./mariadb-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  php:
    image: wodby/drupal-php:7.1-4.4.1
    env_file: ./.env
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: ${DATABASE_HOST}
      DB_USER: ${DATABASE_USER}
      DB_PASSWORD: ${DATABASE_PASSWORD}
      DB_NAME: ${DATABASE_NAME}
      DB_DRIVER: mysql
    volumes:
      - ./:${DRUPAL_ROOT}:delegated
    depends_on:
      mariadb:
        condition: service_healthy

  nginx:
    image: wodby/drupal-nginx:8-1.13-4.0.3
    env_file: ./.env
    depends_on:
      - php
    environment:
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: ${SERVER_ROOT}
    volumes:
      - ./:${DRUPAL_ROOT}:delegated
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:${PROJECT_URL}'
  
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    labels:
      - 'traefik.backend=api'
      - 'traefik.port=3000'
      - 'traefik.frontend.rule=Host:api.${PROJECT_URL}'

  solr:
    image: wodby/drupal-solr:8-6.6-2.4.0
    environment:
      SOLR_HEAP: 1024m
    labels:
      - 'traefik.backend=solr'
      - 'traefik.port=8983'
      - 'traefik.frontend.rule=Host:solr.${PROJECT_URL}'

  mailhog:
    image: mailhog/mailhog
    env_file: ./.env
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.${PROJECT_URL}'

  traefik:
    image: traefik
    env_file: ./.env
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '80:80'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mysqldata:
    driver: "local"
